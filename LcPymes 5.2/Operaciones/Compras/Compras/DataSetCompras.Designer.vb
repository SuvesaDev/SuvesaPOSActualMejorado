'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSetCompras"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSetCompras
    Inherits Global.System.Data.DataSet
    
    Private tableUsuarios As UsuariosDataTable
    
    Private tableMonedas As MonedasDataTable
    
    Private tableordencompra As ordencompraDataTable
    
    Private tabledetalle_ordencompra As detalle_ordencompraDataTable
    
    Private tableMoneda As MonedaDataTable
    
    Private tableProveedores As ProveedoresDataTable
    
    Private tableLotes As LotesDataTable
    
    Private tablearticulos_comprados As articulos_compradosDataTable
    
    Private tablecompras As comprasDataTable
    
    Private relationordencompradetalle_ordencompra As Global.System.Data.DataRelation
    
    Private relationMonedasarticulos_comprados As Global.System.Data.DataRelation

    Private relationcomprasarticulos_comprados As Global.System.Data.DataRelation

    Private relationProveedorescompras As Global.System.Data.DataRelation

    Private relationMonedacompras As Global.System.Data.DataRelation

    Private relationUsuarioscompras As Global.System.Data.DataRelation

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Usuarios")) Is Nothing) Then
                MyBase.Tables.Add(New UsuariosDataTable(ds.Tables("Usuarios")))
            End If
            If (Not (ds.Tables("Monedas")) Is Nothing) Then
                MyBase.Tables.Add(New MonedasDataTable(ds.Tables("Monedas")))
            End If
            If (Not (ds.Tables("ordencompra")) Is Nothing) Then
                MyBase.Tables.Add(New ordencompraDataTable(ds.Tables("ordencompra")))
            End If
            If (Not (ds.Tables("detalle_ordencompra")) Is Nothing) Then
                MyBase.Tables.Add(New detalle_ordencompraDataTable(ds.Tables("detalle_ordencompra")))
            End If
            If (Not (ds.Tables("Moneda")) Is Nothing) Then
                MyBase.Tables.Add(New MonedaDataTable(ds.Tables("Moneda")))
            End If
            If (Not (ds.Tables("Proveedores")) Is Nothing) Then
                MyBase.Tables.Add(New ProveedoresDataTable(ds.Tables("Proveedores")))
            End If
            If (Not (ds.Tables("Lotes")) Is Nothing) Then
                MyBase.Tables.Add(New LotesDataTable(ds.Tables("Lotes")))
            End If
            If (Not (ds.Tables("articulos_comprados")) Is Nothing) Then
                MyBase.Tables.Add(New articulos_compradosDataTable(ds.Tables("articulos_comprados")))
            End If
            If (Not (ds.Tables("compras")) Is Nothing) Then
                MyBase.Tables.Add(New comprasDataTable(ds.Tables("compras")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Usuarios() As UsuariosDataTable
        Get
            Return Me.tableUsuarios
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Monedas() As MonedasDataTable
        Get
            Return Me.tableMonedas
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property ordencompra() As ordencompraDataTable
        Get
            Return Me.tableordencompra
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property detalle_ordencompra() As detalle_ordencompraDataTable
        Get
            Return Me.tabledetalle_ordencompra
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Moneda() As MonedaDataTable
        Get
            Return Me.tableMoneda
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Proveedores() As ProveedoresDataTable
        Get
            Return Me.tableProveedores
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Lotes() As LotesDataTable
        Get
            Return Me.tableLotes
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property articulos_comprados() As articulos_compradosDataTable
        Get
            Return Me.tablearticulos_comprados
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property compras() As comprasDataTable
        Get
            Return Me.tablecompras
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSetCompras = CType(MyBase.Clone, DataSetCompras)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Usuarios")) Is Nothing) Then
                MyBase.Tables.Add(New UsuariosDataTable(ds.Tables("Usuarios")))
            End If
            If (Not (ds.Tables("Monedas")) Is Nothing) Then
                MyBase.Tables.Add(New MonedasDataTable(ds.Tables("Monedas")))
            End If
            If (Not (ds.Tables("ordencompra")) Is Nothing) Then
                MyBase.Tables.Add(New ordencompraDataTable(ds.Tables("ordencompra")))
            End If
            If (Not (ds.Tables("detalle_ordencompra")) Is Nothing) Then
                MyBase.Tables.Add(New detalle_ordencompraDataTable(ds.Tables("detalle_ordencompra")))
            End If
            If (Not (ds.Tables("Moneda")) Is Nothing) Then
                MyBase.Tables.Add(New MonedaDataTable(ds.Tables("Moneda")))
            End If
            If (Not (ds.Tables("Proveedores")) Is Nothing) Then
                MyBase.Tables.Add(New ProveedoresDataTable(ds.Tables("Proveedores")))
            End If
            If (Not (ds.Tables("Lotes")) Is Nothing) Then
                MyBase.Tables.Add(New LotesDataTable(ds.Tables("Lotes")))
            End If
            If (Not (ds.Tables("articulos_comprados")) Is Nothing) Then
                MyBase.Tables.Add(New articulos_compradosDataTable(ds.Tables("articulos_comprados")))
            End If
            If (Not (ds.Tables("compras")) Is Nothing) Then
                MyBase.Tables.Add(New comprasDataTable(ds.Tables("compras")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableUsuarios = CType(MyBase.Tables("Usuarios"), UsuariosDataTable)
        If (initTable = True) Then
            If (Not (Me.tableUsuarios) Is Nothing) Then
                Me.tableUsuarios.InitVars()
            End If
        End If
        Me.tableMonedas = CType(MyBase.Tables("Monedas"), MonedasDataTable)
        If (initTable = True) Then
            If (Not (Me.tableMonedas) Is Nothing) Then
                Me.tableMonedas.InitVars()
            End If
        End If
        Me.tableordencompra = CType(MyBase.Tables("ordencompra"), ordencompraDataTable)
        If (initTable = True) Then
            If (Not (Me.tableordencompra) Is Nothing) Then
                Me.tableordencompra.InitVars()
            End If
        End If
        Me.tabledetalle_ordencompra = CType(MyBase.Tables("detalle_ordencompra"), detalle_ordencompraDataTable)
        If (initTable = True) Then
            If (Not (Me.tabledetalle_ordencompra) Is Nothing) Then
                Me.tabledetalle_ordencompra.InitVars()
            End If
        End If
        Me.tableMoneda = CType(MyBase.Tables("Moneda"), MonedaDataTable)
        If (initTable = True) Then
            If (Not (Me.tableMoneda) Is Nothing) Then
                Me.tableMoneda.InitVars()
            End If
        End If
        Me.tableProveedores = CType(MyBase.Tables("Proveedores"), ProveedoresDataTable)
        If (initTable = True) Then
            If (Not (Me.tableProveedores) Is Nothing) Then
                Me.tableProveedores.InitVars()
            End If
        End If
        Me.tableLotes = CType(MyBase.Tables("Lotes"), LotesDataTable)
        If (initTable = True) Then
            If (Not (Me.tableLotes) Is Nothing) Then
                Me.tableLotes.InitVars()
            End If
        End If
        Me.tablearticulos_comprados = CType(MyBase.Tables("articulos_comprados"), articulos_compradosDataTable)
        If (initTable = True) Then
            If (Not (Me.tablearticulos_comprados) Is Nothing) Then
                Me.tablearticulos_comprados.InitVars()
            End If
        End If
        Me.tablecompras = CType(MyBase.Tables("compras"), comprasDataTable)
        If (initTable = True) Then
            If (Not (Me.tablecompras) Is Nothing) Then
                Me.tablecompras.InitVars()
            End If
        End If
        Me.relationordencompradetalle_ordencompra = Me.Relations("ordencompradetalle_ordencompra")
        Me.relationMonedasarticulos_comprados = Me.Relations("Monedasarticulos_comprados")
        Me.relationcomprasarticulos_comprados = Me.Relations("comprasarticulos_comprados")
        Me.relationProveedorescompras = Me.Relations("Proveedorescompras")
        Me.relationMonedacompras = Me.Relations("Monedacompras")
        Me.relationUsuarioscompras = Me.Relations("Usuarioscompras")
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "DataSetCompras"
        Me.Prefix = ""
        Me.Namespace = "http://www.tempuri.org/DataSetCompras.xsd"
        Me.Locale = New Global.System.Globalization.CultureInfo("es-CR")
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableUsuarios = New UsuariosDataTable()
        MyBase.Tables.Add(Me.tableUsuarios)
        Me.tableMonedas = New MonedasDataTable()
        MyBase.Tables.Add(Me.tableMonedas)
        Me.tableordencompra = New ordencompraDataTable()
        MyBase.Tables.Add(Me.tableordencompra)
        Me.tabledetalle_ordencompra = New detalle_ordencompraDataTable()
        MyBase.Tables.Add(Me.tabledetalle_ordencompra)
        Me.tableMoneda = New MonedaDataTable()
        MyBase.Tables.Add(Me.tableMoneda)
        Me.tableProveedores = New ProveedoresDataTable()
        MyBase.Tables.Add(Me.tableProveedores)
        Me.tableLotes = New LotesDataTable()
        MyBase.Tables.Add(Me.tableLotes)
        Me.tablearticulos_comprados = New articulos_compradosDataTable()
        MyBase.Tables.Add(Me.tablearticulos_comprados)
        Me.tablecompras = New comprasDataTable()
        MyBase.Tables.Add(Me.tablecompras)
        Dim fkc As Global.System.Data.ForeignKeyConstraint
        fkc = New Global.System.Data.ForeignKeyConstraint("ordencompradetalle_ordencompra", New Global.System.Data.DataColumn() {Me.tableordencompra.OrdenColumn}, New Global.System.Data.DataColumn() {Me.tabledetalle_ordencompra.OrdenColumn})
        Me.tabledetalle_ordencompra.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("Monedasarticulos_comprados", New Global.System.Data.DataColumn() {Me.tableMonedas.CodMonedaColumn}, New Global.System.Data.DataColumn() {Me.tablearticulos_comprados.CodMonedaVentaColumn})
        Me.tablearticulos_comprados.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("comprasarticulos_comprados", New Global.System.Data.DataColumn() {Me.tablecompras.Id_CompraColumn}, New Global.System.Data.DataColumn() {Me.tablearticulos_comprados.IdCompraColumn})
        Me.tablearticulos_comprados.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("Proveedorescompras", New Global.System.Data.DataColumn() {Me.tableProveedores.CodigoProvColumn}, New Global.System.Data.DataColumn() {Me.tablecompras.CodigoProvColumn})
        Me.tablecompras.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("Monedacompras", New Global.System.Data.DataColumn() {Me.tableMoneda.CodMonedaColumn}, New Global.System.Data.DataColumn() {Me.tablecompras.Cod_MonedaCompraColumn})
        Me.tablecompras.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("Usuarioscompras", New Global.System.Data.DataColumn() {Me.tableUsuarios.CedulaColumn}, New Global.System.Data.DataColumn() {Me.tablecompras.CedulaUsuarioColumn})
        Me.tablecompras.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        Me.relationordencompradetalle_ordencompra = New Global.System.Data.DataRelation("ordencompradetalle_ordencompra", New Global.System.Data.DataColumn() {Me.tableordencompra.OrdenColumn}, New Global.System.Data.DataColumn() {Me.tabledetalle_ordencompra.OrdenColumn}, False)
        Me.Relations.Add(Me.relationordencompradetalle_ordencompra)
        Me.relationMonedasarticulos_comprados = New Global.System.Data.DataRelation("Monedasarticulos_comprados", New Global.System.Data.DataColumn() {Me.tableMonedas.CodMonedaColumn}, New Global.System.Data.DataColumn() {Me.tablearticulos_comprados.CodMonedaVentaColumn}, False)
        Me.Relations.Add(Me.relationMonedasarticulos_comprados)
        Me.relationcomprasarticulos_comprados = New Global.System.Data.DataRelation("comprasarticulos_comprados", New Global.System.Data.DataColumn() {Me.tablecompras.Id_CompraColumn}, New Global.System.Data.DataColumn() {Me.tablearticulos_comprados.IdCompraColumn}, False)
        Me.Relations.Add(Me.relationcomprasarticulos_comprados)
        Me.relationProveedorescompras = New Global.System.Data.DataRelation("Proveedorescompras", New Global.System.Data.DataColumn() {Me.tableProveedores.CodigoProvColumn}, New Global.System.Data.DataColumn() {Me.tablecompras.CodigoProvColumn}, False)
        Me.Relations.Add(Me.relationProveedorescompras)
        Me.relationMonedacompras = New Global.System.Data.DataRelation("Monedacompras", New Global.System.Data.DataColumn() {Me.tableMoneda.CodMonedaColumn}, New Global.System.Data.DataColumn() {Me.tablecompras.Cod_MonedaCompraColumn}, False)
        Me.Relations.Add(Me.relationMonedacompras)
        Me.relationUsuarioscompras = New Global.System.Data.DataRelation("Usuarioscompras", New Global.System.Data.DataColumn() {Me.tableUsuarios.CedulaColumn}, New Global.System.Data.DataColumn() {Me.tablecompras.CedulaUsuarioColumn}, False)
        Me.Relations.Add(Me.relationUsuarioscompras)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeUsuarios() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeMonedas() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeordencompra() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializedetalle_ordencompra() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeMoneda() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeProveedores() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeLotes() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializearticulos_comprados() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializecompras() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSetCompras = New DataSetCompras()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub UsuariosRowChangeEventHandler(ByVal sender As Object, ByVal e As UsuariosRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub MonedasRowChangeEventHandler(ByVal sender As Object, ByVal e As MonedasRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ordencompraRowChangeEventHandler(ByVal sender As Object, ByVal e As ordencompraRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub detalle_ordencompraRowChangeEventHandler(ByVal sender As Object, ByVal e As detalle_ordencompraRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub MonedaRowChangeEventHandler(ByVal sender As Object, ByVal e As MonedaRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ProveedoresRowChangeEventHandler(ByVal sender As Object, ByVal e As ProveedoresRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub LotesRowChangeEventHandler(ByVal sender As Object, ByVal e As LotesRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub articulos_compradosRowChangeEventHandler(ByVal sender As Object, ByVal e As articulos_compradosRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub comprasRowChangeEventHandler(ByVal sender As Object, ByVal e As comprasRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class UsuariosDataTable
        Inherits Global.System.Data.TypedTableBase(Of UsuariosRow)

        Private columnCedula As Global.System.Data.DataColumn

        Private columnNombre As Global.System.Data.DataColumn

        Private columnClave_Interna As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Usuarios"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CedulaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCedula
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Clave_InternaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClave_Interna
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As UsuariosRow
            Get
                Return CType(Me.Rows(index), UsuariosRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event UsuariosRowChanging As UsuariosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event UsuariosRowChanged As UsuariosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event UsuariosRowDeleting As UsuariosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event UsuariosRowDeleted As UsuariosRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddUsuariosRow(ByVal row As UsuariosRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddUsuariosRow(ByVal Cedula As String, ByVal Nombre As String, ByVal Clave_Interna As String) As UsuariosRow
            Dim rowUsuariosRow As UsuariosRow = CType(Me.NewRow, UsuariosRow)
            Dim columnValuesArray() As Object = New Object() {Cedula, Nombre, Clave_Interna}
            rowUsuariosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUsuariosRow)
            Return rowUsuariosRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCedula(ByVal Cedula As String) As UsuariosRow
            Return CType(Me.Rows.Find(New Object() {Cedula}), UsuariosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UsuariosDataTable = CType(MyBase.Clone, UsuariosDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UsuariosDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCedula = MyBase.Columns("Cedula")
            Me.columnNombre = MyBase.Columns("Nombre")
            Me.columnClave_Interna = MyBase.Columns("Clave_Interna")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCedula = New Global.System.Data.DataColumn("Cedula", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCedula)
            Me.columnNombre = New Global.System.Data.DataColumn("Nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombre)
            Me.columnClave_Interna = New Global.System.Data.DataColumn("Clave_Interna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClave_Interna)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCedula}, True))
            Me.columnCedula.AllowDBNull = False
            Me.columnCedula.Unique = True
            Me.columnNombre.AllowDBNull = False
            Me.columnClave_Interna.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewUsuariosRow() As UsuariosRow
            Return CType(Me.NewRow, UsuariosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UsuariosRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UsuariosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UsuariosRowChangedEvent) Is Nothing) Then
                RaiseEvent UsuariosRowChanged(Me, New UsuariosRowChangeEvent(CType(e.Row, UsuariosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UsuariosRowChangingEvent) Is Nothing) Then
                RaiseEvent UsuariosRowChanging(Me, New UsuariosRowChangeEvent(CType(e.Row, UsuariosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UsuariosRowDeletedEvent) Is Nothing) Then
                RaiseEvent UsuariosRowDeleted(Me, New UsuariosRowChangeEvent(CType(e.Row, UsuariosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UsuariosRowDeletingEvent) Is Nothing) Then
                RaiseEvent UsuariosRowDeleting(Me, New UsuariosRowChangeEvent(CType(e.Row, UsuariosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveUsuariosRow(ByVal row As UsuariosRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UsuariosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class MonedasDataTable
        Inherits Global.System.Data.TypedTableBase(Of MonedasRow)

        Private columnCodMoneda As Global.System.Data.DataColumn

        Private columnMonedaNombre As Global.System.Data.DataColumn

        Private columnValorCompra As Global.System.Data.DataColumn

        Private columnValorVenta As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Monedas"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodMoneda
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MonedaNombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonedaNombre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorCompra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MonedasRow
            Get
                Return CType(Me.Rows(index), MonedasRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MonedasRowChanging As MonedasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MonedasRowChanged As MonedasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MonedasRowDeleting As MonedasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MonedasRowDeleted As MonedasRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMonedasRow(ByVal row As MonedasRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMonedasRow(ByVal CodMoneda As Integer, ByVal MonedaNombre As String, ByVal ValorCompra As Double, ByVal ValorVenta As Double) As MonedasRow
            Dim rowMonedasRow As MonedasRow = CType(Me.NewRow, MonedasRow)
            Dim columnValuesArray() As Object = New Object() {CodMoneda, MonedaNombre, ValorCompra, ValorVenta}
            rowMonedasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMonedasRow)
            Return rowMonedasRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCodMoneda(ByVal CodMoneda As Integer) As MonedasRow
            Return CType(Me.Rows.Find(New Object() {CodMoneda}), MonedasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MonedasDataTable = CType(MyBase.Clone, MonedasDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MonedasDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCodMoneda = MyBase.Columns("CodMoneda")
            Me.columnMonedaNombre = MyBase.Columns("MonedaNombre")
            Me.columnValorCompra = MyBase.Columns("ValorCompra")
            Me.columnValorVenta = MyBase.Columns("ValorVenta")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCodMoneda = New Global.System.Data.DataColumn("CodMoneda", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodMoneda)
            Me.columnMonedaNombre = New Global.System.Data.DataColumn("MonedaNombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonedaNombre)
            Me.columnValorCompra = New Global.System.Data.DataColumn("ValorCompra", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorCompra)
            Me.columnValorVenta = New Global.System.Data.DataColumn("ValorVenta", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorVenta)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCodMoneda}, True))
            Me.columnCodMoneda.AllowDBNull = False
            Me.columnCodMoneda.Unique = True
            Me.columnMonedaNombre.AllowDBNull = False
            Me.columnValorCompra.AllowDBNull = False
            Me.columnValorVenta.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMonedasRow() As MonedasRow
            Return CType(Me.NewRow, MonedasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MonedasRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MonedasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MonedasRowChangedEvent) Is Nothing) Then
                RaiseEvent MonedasRowChanged(Me, New MonedasRowChangeEvent(CType(e.Row, MonedasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MonedasRowChangingEvent) Is Nothing) Then
                RaiseEvent MonedasRowChanging(Me, New MonedasRowChangeEvent(CType(e.Row, MonedasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MonedasRowDeletedEvent) Is Nothing) Then
                RaiseEvent MonedasRowDeleted(Me, New MonedasRowChangeEvent(CType(e.Row, MonedasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MonedasRowDeletingEvent) Is Nothing) Then
                RaiseEvent MonedasRowDeleting(Me, New MonedasRowChangeEvent(CType(e.Row, MonedasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMonedasRow(ByVal row As MonedasRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MonedasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ordencompraDataTable
        Inherits Global.System.Data.TypedTableBase(Of ordencompraRow)

        Private columnOrden As Global.System.Data.DataColumn

        Private columnProveedor As Global.System.Data.DataColumn

        Private columnNombre As Global.System.Data.DataColumn

        Private columnFecha As Global.System.Data.DataColumn

        Private columncontado As Global.System.Data.DataColumn

        Private columncredito As Global.System.Data.DataColumn

        Private columndiascredito As Global.System.Data.DataColumn

        Private columnPlazo As Global.System.Data.DataColumn

        Private columnDescuento As Global.System.Data.DataColumn

        Private columnImpuesto As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnObservaciones As Global.System.Data.DataColumn

        Private columnUsuario As Global.System.Data.DataColumn

        Private columnNombreUsuario As Global.System.Data.DataColumn

        Private columnentregar As Global.System.Data.DataColumn

        Private columnCod_Moneda As Global.System.Data.DataColumn

        Private columnSubTotalGravado As Global.System.Data.DataColumn

        Private columnSubTotalExento As Global.System.Data.DataColumn

        Private columnSubTotal As Global.System.Data.DataColumn

        Private columnAnulado As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ordencompra"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OrdenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrden
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProveedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProveedor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property contadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property creditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property diascreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiascredito
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PlazoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlazo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImpuestoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UsuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreUsuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreUsuario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property entregarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentregar
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cod_MonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCod_Moneda
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubTotalGravadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotalGravado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubTotalExentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotalExento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AnuladoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnulado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ordencompraRow
            Get
                Return CType(Me.Rows(index), ordencompraRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ordencompraRowChanging As ordencompraRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ordencompraRowChanged As ordencompraRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ordencompraRowDeleting As ordencompraRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ordencompraRowDeleted As ordencompraRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddordencompraRow(ByVal row As ordencompraRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddordencompraRow( _
                    ByVal Proveedor As Integer, _
                    ByVal Nombre As String, _
                    ByVal Fecha As Date, _
                    ByVal contado As Boolean, _
                    ByVal credito As Boolean, _
                    ByVal diascredito As Double, _
                    ByVal Plazo As Integer, _
                    ByVal Descuento As Double, _
                    ByVal Impuesto As Double, _
                    ByVal Total As Double, _
                    ByVal Observaciones As String, _
                    ByVal Usuario As String, _
                    ByVal NombreUsuario As String, _
                    ByVal entregar As String, _
                    ByVal Cod_Moneda As Integer, _
                    ByVal SubTotalGravado As Double, _
                    ByVal SubTotalExento As Double, _
                    ByVal SubTotal As Double, _
                    ByVal Anulado As Boolean) As ordencompraRow
            Dim rowordencompraRow As ordencompraRow = CType(Me.NewRow, ordencompraRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Proveedor, Nombre, Fecha, contado, credito, diascredito, Plazo, Descuento, Impuesto, Total, Observaciones, Usuario, NombreUsuario, entregar, Cod_Moneda, SubTotalGravado, SubTotalExento, SubTotal, Anulado}
            rowordencompraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowordencompraRow)
            Return rowordencompraRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByOrden(ByVal Orden As Long) As ordencompraRow
            Return CType(Me.Rows.Find(New Object() {Orden}), ordencompraRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ordencompraDataTable = CType(MyBase.Clone, ordencompraDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ordencompraDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnOrden = MyBase.Columns("Orden")
            Me.columnProveedor = MyBase.Columns("Proveedor")
            Me.columnNombre = MyBase.Columns("Nombre")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columncontado = MyBase.Columns("contado")
            Me.columncredito = MyBase.Columns("credito")
            Me.columndiascredito = MyBase.Columns("diascredito")
            Me.columnPlazo = MyBase.Columns("Plazo")
            Me.columnDescuento = MyBase.Columns("Descuento")
            Me.columnImpuesto = MyBase.Columns("Impuesto")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnUsuario = MyBase.Columns("Usuario")
            Me.columnNombreUsuario = MyBase.Columns("NombreUsuario")
            Me.columnentregar = MyBase.Columns("entregar")
            Me.columnCod_Moneda = MyBase.Columns("Cod_Moneda")
            Me.columnSubTotalGravado = MyBase.Columns("SubTotalGravado")
            Me.columnSubTotalExento = MyBase.Columns("SubTotalExento")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
            Me.columnAnulado = MyBase.Columns("Anulado")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnOrden = New Global.System.Data.DataColumn("Orden", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrden)
            Me.columnProveedor = New Global.System.Data.DataColumn("Proveedor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProveedor)
            Me.columnNombre = New Global.System.Data.DataColumn("Nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombre)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columncontado = New Global.System.Data.DataColumn("contado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontado)
            Me.columncredito = New Global.System.Data.DataColumn("credito", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito)
            Me.columndiascredito = New Global.System.Data.DataColumn("diascredito", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiascredito)
            Me.columnPlazo = New Global.System.Data.DataColumn("Plazo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlazo)
            Me.columnDescuento = New Global.System.Data.DataColumn("Descuento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuento)
            Me.columnImpuesto = New Global.System.Data.DataColumn("Impuesto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnUsuario = New Global.System.Data.DataColumn("Usuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsuario)
            Me.columnNombreUsuario = New Global.System.Data.DataColumn("NombreUsuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreUsuario)
            Me.columnentregar = New Global.System.Data.DataColumn("entregar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentregar)
            Me.columnCod_Moneda = New Global.System.Data.DataColumn("Cod_Moneda", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCod_Moneda)
            Me.columnSubTotalGravado = New Global.System.Data.DataColumn("SubTotalGravado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotalGravado)
            Me.columnSubTotalExento = New Global.System.Data.DataColumn("SubTotalExento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotalExento)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnAnulado = New Global.System.Data.DataColumn("Anulado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnulado)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOrden}, True))
            Me.columnOrden.AutoIncrement = True
            Me.columnOrden.AllowDBNull = False
            Me.columnOrden.ReadOnly = True
            Me.columnOrden.Unique = True
            Me.columnProveedor.AllowDBNull = False
            Me.columnNombre.AllowDBNull = False
            Me.columnFecha.AllowDBNull = False
            Me.columncontado.AllowDBNull = False
            Me.columncredito.AllowDBNull = False
            Me.columndiascredito.AllowDBNull = False
            Me.columnPlazo.AllowDBNull = False
            Me.columnDescuento.AllowDBNull = False
            Me.columnImpuesto.AllowDBNull = False
            Me.columnTotal.AllowDBNull = False
            Me.columnObservaciones.AllowDBNull = False
            Me.columnUsuario.AllowDBNull = False
            Me.columnNombreUsuario.AllowDBNull = False
            Me.columnentregar.AllowDBNull = False
            Me.columnCod_Moneda.AllowDBNull = False
            Me.columnSubTotalGravado.AllowDBNull = False
            Me.columnSubTotalExento.AllowDBNull = False
            Me.columnSubTotal.AllowDBNull = False
            Me.columnAnulado.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewordencompraRow() As ordencompraRow
            Return CType(Me.NewRow, ordencompraRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ordencompraRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ordencompraRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ordencompraRowChangedEvent) Is Nothing) Then
                RaiseEvent ordencompraRowChanged(Me, New ordencompraRowChangeEvent(CType(e.Row, ordencompraRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ordencompraRowChangingEvent) Is Nothing) Then
                RaiseEvent ordencompraRowChanging(Me, New ordencompraRowChangeEvent(CType(e.Row, ordencompraRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ordencompraRowDeletedEvent) Is Nothing) Then
                RaiseEvent ordencompraRowDeleted(Me, New ordencompraRowChangeEvent(CType(e.Row, ordencompraRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ordencompraRowDeletingEvent) Is Nothing) Then
                RaiseEvent ordencompraRowDeleting(Me, New ordencompraRowChangeEvent(CType(e.Row, ordencompraRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveordencompraRow(ByVal row As ordencompraRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ordencompraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class detalle_ordencompraDataTable
        Inherits Global.System.Data.TypedTableBase(Of detalle_ordencompraRow)

        Private columnId As Global.System.Data.DataColumn

        Private columnOrden As Global.System.Data.DataColumn

        Private columnCodigo As Global.System.Data.DataColumn

        Private columnDescripcion As Global.System.Data.DataColumn

        Private columnCostoUnitario As Global.System.Data.DataColumn

        Private columnCantidad As Global.System.Data.DataColumn

        Private columnTotalCompra As Global.System.Data.DataColumn

        Private columnPorc_Descuento As Global.System.Data.DataColumn

        Private columnDescuento As Global.System.Data.DataColumn

        Private columnPorc_Impuesto As Global.System.Data.DataColumn

        Private columnimpuesto As Global.System.Data.DataColumn

        Private columnOtrosCargos As Global.System.Data.DataColumn

        Private columnMonto_Flete As Global.System.Data.DataColumn

        Private columnCosto As Global.System.Data.DataColumn

        Private columnGravado As Global.System.Data.DataColumn

        Private columnExento As Global.System.Data.DataColumn

        Private columnVendidos As Global.System.Data.DataColumn

        Private columnExist_Actual As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "detalle_ordencompra"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OrdenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrden
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CostoUnitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCostoUnitario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalCompra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Porc_DescuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorc_Descuento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Porc_ImpuestoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorc_Impuesto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property impuestoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpuesto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OtrosCargosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtrosCargos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Monto_FleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto_Flete
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CostoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCosto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GravadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGravado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VendidosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVendidos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Exist_ActualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExist_Actual
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As detalle_ordencompraRow
            Get
                Return CType(Me.Rows(index), detalle_ordencompraRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event detalle_ordencompraRowChanging As detalle_ordencompraRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event detalle_ordencompraRowChanged As detalle_ordencompraRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event detalle_ordencompraRowDeleting As detalle_ordencompraRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event detalle_ordencompraRowDeleted As detalle_ordencompraRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub Adddetalle_ordencompraRow(ByVal row As detalle_ordencompraRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function Adddetalle_ordencompraRow( _
                    ByVal parentordencompraRowByordencompradetalle_ordencompra As ordencompraRow, _
                    ByVal Codigo As Long, _
                    ByVal Descripcion As String, _
                    ByVal CostoUnitario As Double, _
                    ByVal Cantidad As Double, _
                    ByVal TotalCompra As Double, _
                    ByVal Porc_Descuento As Double, _
                    ByVal Descuento As Double, _
                    ByVal Porc_Impuesto As Double, _
                    ByVal impuesto As Double, _
                    ByVal OtrosCargos As Double, _
                    ByVal Monto_Flete As Double, _
                    ByVal Costo As Double, _
                    ByVal Gravado As Double, _
                    ByVal Exento As Double, _
                    ByVal Vendidos As Double, _
                    ByVal Exist_Actual As Double) As detalle_ordencompraRow
            Dim rowdetalle_ordencompraRow As detalle_ordencompraRow = CType(Me.NewRow, detalle_ordencompraRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Codigo, Descripcion, CostoUnitario, Cantidad, TotalCompra, Porc_Descuento, Descuento, Porc_Impuesto, impuesto, OtrosCargos, Monto_Flete, Costo, Gravado, Exento, Vendidos, Exist_Actual}
            If (Not (parentordencompraRowByordencompradetalle_ordencompra) Is Nothing) Then
                columnValuesArray(1) = parentordencompraRowByordencompradetalle_ordencompra(0)
            End If
            rowdetalle_ordencompraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdetalle_ordencompraRow)
            Return rowdetalle_ordencompraRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindById(ByVal Id As Long) As detalle_ordencompraRow
            Return CType(Me.Rows.Find(New Object() {Id}), detalle_ordencompraRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As detalle_ordencompraDataTable = CType(MyBase.Clone, detalle_ordencompraDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New detalle_ordencompraDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnOrden = MyBase.Columns("Orden")
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnCostoUnitario = MyBase.Columns("CostoUnitario")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnTotalCompra = MyBase.Columns("TotalCompra")
            Me.columnPorc_Descuento = MyBase.Columns("Porc_Descuento")
            Me.columnDescuento = MyBase.Columns("Descuento")
            Me.columnPorc_Impuesto = MyBase.Columns("Porc_Impuesto")
            Me.columnimpuesto = MyBase.Columns("impuesto")
            Me.columnOtrosCargos = MyBase.Columns("OtrosCargos")
            Me.columnMonto_Flete = MyBase.Columns("Monto_Flete")
            Me.columnCosto = MyBase.Columns("Costo")
            Me.columnGravado = MyBase.Columns("Gravado")
            Me.columnExento = MyBase.Columns("Exento")
            Me.columnVendidos = MyBase.Columns("Vendidos")
            Me.columnExist_Actual = MyBase.Columns("Exist_Actual")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnOrden = New Global.System.Data.DataColumn("Orden", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrden)
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnCostoUnitario = New Global.System.Data.DataColumn("CostoUnitario", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCostoUnitario)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnTotalCompra = New Global.System.Data.DataColumn("TotalCompra", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalCompra)
            Me.columnPorc_Descuento = New Global.System.Data.DataColumn("Porc_Descuento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorc_Descuento)
            Me.columnDescuento = New Global.System.Data.DataColumn("Descuento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuento)
            Me.columnPorc_Impuesto = New Global.System.Data.DataColumn("Porc_Impuesto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorc_Impuesto)
            Me.columnimpuesto = New Global.System.Data.DataColumn("impuesto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpuesto)
            Me.columnOtrosCargos = New Global.System.Data.DataColumn("OtrosCargos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtrosCargos)
            Me.columnMonto_Flete = New Global.System.Data.DataColumn("Monto_Flete", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto_Flete)
            Me.columnCosto = New Global.System.Data.DataColumn("Costo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCosto)
            Me.columnGravado = New Global.System.Data.DataColumn("Gravado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGravado)
            Me.columnExento = New Global.System.Data.DataColumn("Exento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExento)
            Me.columnVendidos = New Global.System.Data.DataColumn("Vendidos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVendidos)
            Me.columnExist_Actual = New Global.System.Data.DataColumn("Exist_Actual", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExist_Actual)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, True))
            Me.columnId.AutoIncrement = True
            Me.columnId.AllowDBNull = False
            Me.columnId.ReadOnly = True
            Me.columnId.Unique = True
            Me.columnOrden.AllowDBNull = False
            Me.columnCodigo.AllowDBNull = False
            Me.columnDescripcion.AllowDBNull = False
            Me.columnCostoUnitario.AllowDBNull = False
            Me.columnCantidad.AllowDBNull = False
            Me.columnTotalCompra.AllowDBNull = False
            Me.columnPorc_Descuento.AllowDBNull = False
            Me.columnDescuento.AllowDBNull = False
            Me.columnPorc_Impuesto.AllowDBNull = False
            Me.columnimpuesto.AllowDBNull = False
            Me.columnOtrosCargos.AllowDBNull = False
            Me.columnMonto_Flete.AllowDBNull = False
            Me.columnCosto.AllowDBNull = False
            Me.columnGravado.AllowDBNull = False
            Me.columnExento.AllowDBNull = False
            Me.columnVendidos.AllowDBNull = False
            Me.columnExist_Actual.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Newdetalle_ordencompraRow() As detalle_ordencompraRow
            Return CType(Me.NewRow, detalle_ordencompraRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New detalle_ordencompraRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(detalle_ordencompraRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.detalle_ordencompraRowChangedEvent) Is Nothing) Then
                RaiseEvent detalle_ordencompraRowChanged(Me, New detalle_ordencompraRowChangeEvent(CType(e.Row, detalle_ordencompraRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.detalle_ordencompraRowChangingEvent) Is Nothing) Then
                RaiseEvent detalle_ordencompraRowChanging(Me, New detalle_ordencompraRowChangeEvent(CType(e.Row, detalle_ordencompraRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.detalle_ordencompraRowDeletedEvent) Is Nothing) Then
                RaiseEvent detalle_ordencompraRowDeleted(Me, New detalle_ordencompraRowChangeEvent(CType(e.Row, detalle_ordencompraRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.detalle_ordencompraRowDeletingEvent) Is Nothing) Then
                RaiseEvent detalle_ordencompraRowDeleting(Me, New detalle_ordencompraRowChangeEvent(CType(e.Row, detalle_ordencompraRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Removedetalle_ordencompraRow(ByVal row As detalle_ordencompraRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "detalle_ordencompraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class MonedaDataTable
        Inherits Global.System.Data.TypedTableBase(Of MonedaRow)

        Private columnCodMoneda As Global.System.Data.DataColumn

        Private columnMonedaNombre As Global.System.Data.DataColumn

        Private columnValorCompra As Global.System.Data.DataColumn

        Private columnValorVenta As Global.System.Data.DataColumn

        Private columnSimbolo As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Moneda"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodMoneda
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MonedaNombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonedaNombre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorCompra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValorVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValorVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SimboloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSimbolo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MonedaRow
            Get
                Return CType(Me.Rows(index), MonedaRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MonedaRowChanging As MonedaRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MonedaRowChanged As MonedaRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MonedaRowDeleting As MonedaRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MonedaRowDeleted As MonedaRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMonedaRow(ByVal row As MonedaRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMonedaRow(ByVal CodMoneda As Integer, ByVal MonedaNombre As String, ByVal ValorCompra As Double, ByVal ValorVenta As Double, ByVal Simbolo As String) As MonedaRow
            Dim rowMonedaRow As MonedaRow = CType(Me.NewRow, MonedaRow)
            Dim columnValuesArray() As Object = New Object() {CodMoneda, MonedaNombre, ValorCompra, ValorVenta, Simbolo}
            rowMonedaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMonedaRow)
            Return rowMonedaRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCodMoneda(ByVal CodMoneda As Integer) As MonedaRow
            Return CType(Me.Rows.Find(New Object() {CodMoneda}), MonedaRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MonedaDataTable = CType(MyBase.Clone, MonedaDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MonedaDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCodMoneda = MyBase.Columns("CodMoneda")
            Me.columnMonedaNombre = MyBase.Columns("MonedaNombre")
            Me.columnValorCompra = MyBase.Columns("ValorCompra")
            Me.columnValorVenta = MyBase.Columns("ValorVenta")
            Me.columnSimbolo = MyBase.Columns("Simbolo")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCodMoneda = New Global.System.Data.DataColumn("CodMoneda", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodMoneda)
            Me.columnMonedaNombre = New Global.System.Data.DataColumn("MonedaNombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonedaNombre)
            Me.columnValorCompra = New Global.System.Data.DataColumn("ValorCompra", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorCompra)
            Me.columnValorVenta = New Global.System.Data.DataColumn("ValorVenta", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValorVenta)
            Me.columnSimbolo = New Global.System.Data.DataColumn("Simbolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSimbolo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCodMoneda}, True))
            Me.columnCodMoneda.AllowDBNull = False
            Me.columnCodMoneda.Unique = True
            Me.columnMonedaNombre.AllowDBNull = False
            Me.columnValorCompra.AllowDBNull = False
            Me.columnValorVenta.AllowDBNull = False
            Me.columnSimbolo.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMonedaRow() As MonedaRow
            Return CType(Me.NewRow, MonedaRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MonedaRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MonedaRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MonedaRowChangedEvent) Is Nothing) Then
                RaiseEvent MonedaRowChanged(Me, New MonedaRowChangeEvent(CType(e.Row, MonedaRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MonedaRowChangingEvent) Is Nothing) Then
                RaiseEvent MonedaRowChanging(Me, New MonedaRowChangeEvent(CType(e.Row, MonedaRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MonedaRowDeletedEvent) Is Nothing) Then
                RaiseEvent MonedaRowDeleted(Me, New MonedaRowChangeEvent(CType(e.Row, MonedaRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MonedaRowDeletingEvent) Is Nothing) Then
                RaiseEvent MonedaRowDeleting(Me, New MonedaRowChangeEvent(CType(e.Row, MonedaRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMonedaRow(ByVal row As MonedaRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MonedaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ProveedoresDataTable
        Inherits Global.System.Data.TypedTableBase(Of ProveedoresRow)

        Private columnCodigoProv As Global.System.Data.DataColumn

        Private columnNombre As Global.System.Data.DataColumn

        Private columnUtilidad_Fija As Global.System.Data.DataColumn

        Private columnUtilidad_Inventario As Global.System.Data.DataColumn

        Private columnPlazo As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Proveedores"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoProvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoProv
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Utilidad_FijaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUtilidad_Fija
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Utilidad_InventarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUtilidad_Inventario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PlazoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlazo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ProveedoresRow
            Get
                Return CType(Me.Rows(index), ProveedoresRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ProveedoresRowChanging As ProveedoresRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ProveedoresRowChanged As ProveedoresRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ProveedoresRowDeleting As ProveedoresRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ProveedoresRowDeleted As ProveedoresRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddProveedoresRow(ByVal row As ProveedoresRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddProveedoresRow(ByVal CodigoProv As Integer, ByVal Nombre As String, ByVal Utilidad_Fija As Boolean, ByVal Utilidad_Inventario As Double, ByVal Plazo As Integer) As ProveedoresRow
            Dim rowProveedoresRow As ProveedoresRow = CType(Me.NewRow, ProveedoresRow)
            Dim columnValuesArray() As Object = New Object() {CodigoProv, Nombre, Utilidad_Fija, Utilidad_Inventario, Plazo}
            rowProveedoresRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowProveedoresRow)
            Return rowProveedoresRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCodigoProv(ByVal CodigoProv As Integer) As ProveedoresRow
            Return CType(Me.Rows.Find(New Object() {CodigoProv}), ProveedoresRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ProveedoresDataTable = CType(MyBase.Clone, ProveedoresDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ProveedoresDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCodigoProv = MyBase.Columns("CodigoProv")
            Me.columnNombre = MyBase.Columns("Nombre")
            Me.columnUtilidad_Fija = MyBase.Columns("Utilidad_Fija")
            Me.columnUtilidad_Inventario = MyBase.Columns("Utilidad_Inventario")
            Me.columnPlazo = MyBase.Columns("Plazo")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCodigoProv = New Global.System.Data.DataColumn("CodigoProv", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoProv)
            Me.columnNombre = New Global.System.Data.DataColumn("Nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombre)
            Me.columnUtilidad_Fija = New Global.System.Data.DataColumn("Utilidad_Fija", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUtilidad_Fija)
            Me.columnUtilidad_Inventario = New Global.System.Data.DataColumn("Utilidad_Inventario", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUtilidad_Inventario)
            Me.columnPlazo = New Global.System.Data.DataColumn("Plazo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlazo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCodigoProv}, True))
            Me.columnCodigoProv.AllowDBNull = False
            Me.columnCodigoProv.Unique = True
            Me.columnNombre.AllowDBNull = False
            Me.columnUtilidad_Fija.AllowDBNull = False
            Me.columnUtilidad_Inventario.AllowDBNull = False
            Me.columnPlazo.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewProveedoresRow() As ProveedoresRow
            Return CType(Me.NewRow, ProveedoresRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ProveedoresRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ProveedoresRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ProveedoresRowChangedEvent) Is Nothing) Then
                RaiseEvent ProveedoresRowChanged(Me, New ProveedoresRowChangeEvent(CType(e.Row, ProveedoresRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ProveedoresRowChangingEvent) Is Nothing) Then
                RaiseEvent ProveedoresRowChanging(Me, New ProveedoresRowChangeEvent(CType(e.Row, ProveedoresRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ProveedoresRowDeletedEvent) Is Nothing) Then
                RaiseEvent ProveedoresRowDeleted(Me, New ProveedoresRowChangeEvent(CType(e.Row, ProveedoresRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ProveedoresRowDeletingEvent) Is Nothing) Then
                RaiseEvent ProveedoresRowDeleting(Me, New ProveedoresRowChangeEvent(CType(e.Row, ProveedoresRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveProveedoresRow(ByVal row As ProveedoresRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ProveedoresDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class LotesDataTable
        Inherits Global.System.Data.TypedTableBase(Of LotesRow)

        Private columnId As Global.System.Data.DataColumn

        Private columnNumero As Global.System.Data.DataColumn

        Private columnVencimiento As Global.System.Data.DataColumn

        Private columnCant_Inicial As Global.System.Data.DataColumn

        Private columnCant_Actual As Global.System.Data.DataColumn

        Private columnFecha_Entrada As Global.System.Data.DataColumn

        Private columnCod_Articulo As Global.System.Data.DataColumn

        Private columnDocumento As Global.System.Data.DataColumn

        Private columnTipo As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Lotes"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumero
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VencimientoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVencimiento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cant_InicialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCant_Inicial
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cant_ActualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCant_Actual
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Fecha_EntradaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha_Entrada
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cod_ArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCod_Articulo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As LotesRow
            Get
                Return CType(Me.Rows(index), LotesRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event LotesRowChanging As LotesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event LotesRowChanged As LotesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event LotesRowDeleting As LotesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event LotesRowDeleted As LotesRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddLotesRow(ByVal row As LotesRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddLotesRow(ByVal Numero As String, ByVal Vencimiento As Date, ByVal Cant_Inicial As Double, ByVal Cant_Actual As Double, ByVal Fecha_Entrada As Date, ByVal Cod_Articulo As Long, ByVal Documento As Long, ByVal Tipo As String) As LotesRow
            Dim rowLotesRow As LotesRow = CType(Me.NewRow, LotesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Numero, Vencimiento, Cant_Inicial, Cant_Actual, Fecha_Entrada, Cod_Articulo, Documento, Tipo}
            rowLotesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLotesRow)
            Return rowLotesRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindById(ByVal Id As Long) As LotesRow
            Return CType(Me.Rows.Find(New Object() {Id}), LotesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LotesDataTable = CType(MyBase.Clone, LotesDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LotesDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnNumero = MyBase.Columns("Numero")
            Me.columnVencimiento = MyBase.Columns("Vencimiento")
            Me.columnCant_Inicial = MyBase.Columns("Cant_Inicial")
            Me.columnCant_Actual = MyBase.Columns("Cant_Actual")
            Me.columnFecha_Entrada = MyBase.Columns("Fecha_Entrada")
            Me.columnCod_Articulo = MyBase.Columns("Cod_Articulo")
            Me.columnDocumento = MyBase.Columns("Documento")
            Me.columnTipo = MyBase.Columns("Tipo")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnNumero = New Global.System.Data.DataColumn("Numero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumero)
            Me.columnVencimiento = New Global.System.Data.DataColumn("Vencimiento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVencimiento)
            Me.columnCant_Inicial = New Global.System.Data.DataColumn("Cant_Inicial", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCant_Inicial)
            Me.columnCant_Actual = New Global.System.Data.DataColumn("Cant_Actual", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCant_Actual)
            Me.columnFecha_Entrada = New Global.System.Data.DataColumn("Fecha_Entrada", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha_Entrada)
            Me.columnCod_Articulo = New Global.System.Data.DataColumn("Cod_Articulo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCod_Articulo)
            Me.columnDocumento = New Global.System.Data.DataColumn("Documento", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumento)
            Me.columnTipo = New Global.System.Data.DataColumn("Tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, True))
            Me.columnId.AutoIncrement = True
            Me.columnId.AllowDBNull = False
            Me.columnId.ReadOnly = True
            Me.columnId.Unique = True
            Me.columnNumero.AllowDBNull = False
            Me.columnVencimiento.AllowDBNull = False
            Me.columnCant_Inicial.AllowDBNull = False
            Me.columnCant_Actual.AllowDBNull = False
            Me.columnFecha_Entrada.AllowDBNull = False
            Me.columnCod_Articulo.AllowDBNull = False
            Me.columnDocumento.AllowDBNull = False
            Me.columnTipo.AllowDBNull = False
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewLotesRow() As LotesRow
            Return CType(Me.NewRow, LotesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LotesRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LotesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LotesRowChangedEvent) Is Nothing) Then
                RaiseEvent LotesRowChanged(Me, New LotesRowChangeEvent(CType(e.Row, LotesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LotesRowChangingEvent) Is Nothing) Then
                RaiseEvent LotesRowChanging(Me, New LotesRowChangeEvent(CType(e.Row, LotesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LotesRowDeletedEvent) Is Nothing) Then
                RaiseEvent LotesRowDeleted(Me, New LotesRowChangeEvent(CType(e.Row, LotesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LotesRowDeletingEvent) Is Nothing) Then
                RaiseEvent LotesRowDeleting(Me, New LotesRowChangeEvent(CType(e.Row, LotesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveLotesRow(ByVal row As LotesRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LotesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class articulos_compradosDataTable
        Inherits Global.System.Data.TypedTableBase(Of articulos_compradosRow)

        Private columnId_ArticuloComprados As Global.System.Data.DataColumn

        Private columnIdCompra As Global.System.Data.DataColumn

        Private columnCodigo As Global.System.Data.DataColumn

        Private columnDescripcion As Global.System.Data.DataColumn

        Private columnBase As Global.System.Data.DataColumn

        Private columnMonto_Flete As Global.System.Data.DataColumn

        Private columnOtrosCargos As Global.System.Data.DataColumn

        Private columnCosto As Global.System.Data.DataColumn

        Private columnCantidad As Global.System.Data.DataColumn

        Private columnGravado As Global.System.Data.DataColumn

        Private columnExento As Global.System.Data.DataColumn

        Private columnDescuento As Global.System.Data.DataColumn

        Private columnDescuento_P As Global.System.Data.DataColumn

        Private columnImpuesto_P As Global.System.Data.DataColumn

        Private columnImpuesto As Global.System.Data.DataColumn

        Private columnTotal As Global.System.Data.DataColumn

        Private columnDevoluciones As Global.System.Data.DataColumn

        Private columnPrecio_A As Global.System.Data.DataColumn

        Private columnPrecio_B As Global.System.Data.DataColumn

        Private columnPrecio_C As Global.System.Data.DataColumn

        Private columnPrecio_D As Global.System.Data.DataColumn

        Private columnCodMonedaVenta As Global.System.Data.DataColumn

        Private columnNuevoCostoBase As Global.System.Data.DataColumn

        Private columnLote As Global.System.Data.DataColumn

        Private columnRegalias As Global.System.Data.DataColumn

        Private columnCodArticulo As Global.System.Data.DataColumn

        Private columnBonificado As Global.System.Data.DataColumn

        Private columnCodigoBonificado As Global.System.Data.DataColumn

        Private columnCantidadBonificado As Global.System.Data.DataColumn

        Private columnCostoBonificado As Global.System.Data.DataColumn

        Private columnSubTotalBonificado As Global.System.Data.DataColumn

        Private columnCodArticuloBonificacion As Global.System.Data.DataColumn

        Private columnCodCabys As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "articulos_comprados"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Id_ArticuloCompradosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_ArticuloComprados
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdCompra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBase
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Monto_FleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto_Flete
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OtrosCargosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtrosCargos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CostoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCosto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GravadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGravado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Descuento_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuento_P
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Impuesto_PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto_P
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImpuestoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DevolucionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDevoluciones
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Precio_AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio_A
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Precio_BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio_B
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Precio_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio_C
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Precio_DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio_D
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodMonedaVentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodMonedaVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NuevoCostoBaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNuevoCostoBase
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLote
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RegaliasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegalias
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodArticulo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BonificadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBonificado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoBonificadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoBonificado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantidadBonificadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidadBonificado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CostoBonificadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCostoBonificado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubTotalBonificadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotalBonificado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodArticuloBonificacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodArticuloBonificacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodCabysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodCabys
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As articulos_compradosRow
            Get
                Return CType(Me.Rows(index), articulos_compradosRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event articulos_compradosRowChanging As articulos_compradosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event articulos_compradosRowChanged As articulos_compradosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event articulos_compradosRowDeleting As articulos_compradosRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event articulos_compradosRowDeleted As articulos_compradosRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub Addarticulos_compradosRow(ByVal row As articulos_compradosRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function Addarticulos_compradosRow( _
                    ByVal parentcomprasRowBycomprasarticulos_comprados As comprasRow, _
                    ByVal Codigo As Long, _
                    ByVal Descripcion As String, _
                    ByVal Base As Double, _
                    ByVal Monto_Flete As Double, _
                    ByVal OtrosCargos As Double, _
                    ByVal Costo As Double, _
                    ByVal Cantidad As Double, _
                    ByVal Gravado As Double, _
                    ByVal Exento As Double, _
                    ByVal Descuento As Double, _
                    ByVal Descuento_P As Double, _
                    ByVal Impuesto_P As Double, _
                    ByVal Impuesto As Double, _
                    ByVal Total As Double, _
                    ByVal Devoluciones As Double, _
                    ByVal Precio_A As Double, _
                    ByVal Precio_B As Double, _
                    ByVal Precio_C As Double, _
                    ByVal Precio_D As Double, _
                    ByVal parentMonedasRowByMonedasarticulos_comprados As MonedasRow, _
                    ByVal NuevoCostoBase As Double, _
                    ByVal Lote As String, _
                    ByVal Regalias As Double, _
                    ByVal CodArticulo As String, _
                    ByVal Bonificado As Boolean, _
                    ByVal CodigoBonificado As Long, _
                    ByVal CantidadBonificado As Double, _
                    ByVal CostoBonificado As Double, _
                    ByVal SubTotalBonificado As Double, _
                    ByVal CodArticuloBonificacion As String, _
                    ByVal CodCabys As String) As articulos_compradosRow
            Dim rowarticulos_compradosRow As articulos_compradosRow = CType(Me.NewRow, articulos_compradosRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Codigo, Descripcion, Base, Monto_Flete, OtrosCargos, Costo, Cantidad, Gravado, Exento, Descuento, Descuento_P, Impuesto_P, Impuesto, Total, Devoluciones, Precio_A, Precio_B, Precio_C, Precio_D, Nothing, NuevoCostoBase, Lote, Regalias, CodArticulo, Bonificado, CodigoBonificado, CantidadBonificado, CostoBonificado, SubTotalBonificado, CodArticuloBonificacion, CodCabys}
            If (Not (parentcomprasRowBycomprasarticulos_comprados) Is Nothing) Then
                columnValuesArray(1) = parentcomprasRowBycomprasarticulos_comprados(20)
            End If
            If (Not (parentMonedasRowByMonedasarticulos_comprados) Is Nothing) Then
                columnValuesArray(21) = parentMonedasRowByMonedasarticulos_comprados(0)
            End If
            rowarticulos_compradosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowarticulos_compradosRow)
            Return rowarticulos_compradosRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindById_ArticuloComprados(ByVal Id_ArticuloComprados As Long) As articulos_compradosRow
            Return CType(Me.Rows.Find(New Object() {Id_ArticuloComprados}), articulos_compradosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As articulos_compradosDataTable = CType(MyBase.Clone, articulos_compradosDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New articulos_compradosDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnId_ArticuloComprados = MyBase.Columns("Id_ArticuloComprados")
            Me.columnIdCompra = MyBase.Columns("IdCompra")
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnBase = MyBase.Columns("Base")
            Me.columnMonto_Flete = MyBase.Columns("Monto_Flete")
            Me.columnOtrosCargos = MyBase.Columns("OtrosCargos")
            Me.columnCosto = MyBase.Columns("Costo")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnGravado = MyBase.Columns("Gravado")
            Me.columnExento = MyBase.Columns("Exento")
            Me.columnDescuento = MyBase.Columns("Descuento")
            Me.columnDescuento_P = MyBase.Columns("Descuento_P")
            Me.columnImpuesto_P = MyBase.Columns("Impuesto_P")
            Me.columnImpuesto = MyBase.Columns("Impuesto")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columnDevoluciones = MyBase.Columns("Devoluciones")
            Me.columnPrecio_A = MyBase.Columns("Precio_A")
            Me.columnPrecio_B = MyBase.Columns("Precio_B")
            Me.columnPrecio_C = MyBase.Columns("Precio_C")
            Me.columnPrecio_D = MyBase.Columns("Precio_D")
            Me.columnCodMonedaVenta = MyBase.Columns("CodMonedaVenta")
            Me.columnNuevoCostoBase = MyBase.Columns("NuevoCostoBase")
            Me.columnLote = MyBase.Columns("Lote")
            Me.columnRegalias = MyBase.Columns("Regalias")
            Me.columnCodArticulo = MyBase.Columns("CodArticulo")
            Me.columnBonificado = MyBase.Columns("Bonificado")
            Me.columnCodigoBonificado = MyBase.Columns("CodigoBonificado")
            Me.columnCantidadBonificado = MyBase.Columns("CantidadBonificado")
            Me.columnCostoBonificado = MyBase.Columns("CostoBonificado")
            Me.columnSubTotalBonificado = MyBase.Columns("SubTotalBonificado")
            Me.columnCodArticuloBonificacion = MyBase.Columns("CodArticuloBonificacion")
            Me.columnCodCabys = MyBase.Columns("CodCabys")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnId_ArticuloComprados = New Global.System.Data.DataColumn("Id_ArticuloComprados", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_ArticuloComprados)
            Me.columnIdCompra = New Global.System.Data.DataColumn("IdCompra", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdCompra)
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnBase = New Global.System.Data.DataColumn("Base", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBase)
            Me.columnMonto_Flete = New Global.System.Data.DataColumn("Monto_Flete", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto_Flete)
            Me.columnOtrosCargos = New Global.System.Data.DataColumn("OtrosCargos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtrosCargos)
            Me.columnCosto = New Global.System.Data.DataColumn("Costo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCosto)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnGravado = New Global.System.Data.DataColumn("Gravado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGravado)
            Me.columnExento = New Global.System.Data.DataColumn("Exento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExento)
            Me.columnDescuento = New Global.System.Data.DataColumn("Descuento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuento)
            Me.columnDescuento_P = New Global.System.Data.DataColumn("Descuento_P", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuento_P)
            Me.columnImpuesto_P = New Global.System.Data.DataColumn("Impuesto_P", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto_P)
            Me.columnImpuesto = New Global.System.Data.DataColumn("Impuesto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columnDevoluciones = New Global.System.Data.DataColumn("Devoluciones", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDevoluciones)
            Me.columnPrecio_A = New Global.System.Data.DataColumn("Precio_A", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio_A)
            Me.columnPrecio_B = New Global.System.Data.DataColumn("Precio_B", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio_B)
            Me.columnPrecio_C = New Global.System.Data.DataColumn("Precio_C", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio_C)
            Me.columnPrecio_D = New Global.System.Data.DataColumn("Precio_D", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio_D)
            Me.columnCodMonedaVenta = New Global.System.Data.DataColumn("CodMonedaVenta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodMonedaVenta)
            Me.columnNuevoCostoBase = New Global.System.Data.DataColumn("NuevoCostoBase", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNuevoCostoBase)
            Me.columnLote = New Global.System.Data.DataColumn("Lote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLote)
            Me.columnRegalias = New Global.System.Data.DataColumn("Regalias", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegalias)
            Me.columnCodArticulo = New Global.System.Data.DataColumn("CodArticulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodArticulo)
            Me.columnBonificado = New Global.System.Data.DataColumn("Bonificado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBonificado)
            Me.columnCodigoBonificado = New Global.System.Data.DataColumn("CodigoBonificado", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoBonificado)
            Me.columnCantidadBonificado = New Global.System.Data.DataColumn("CantidadBonificado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidadBonificado)
            Me.columnCostoBonificado = New Global.System.Data.DataColumn("CostoBonificado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCostoBonificado)
            Me.columnSubTotalBonificado = New Global.System.Data.DataColumn("SubTotalBonificado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotalBonificado)
            Me.columnCodArticuloBonificacion = New Global.System.Data.DataColumn("CodArticuloBonificacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodArticuloBonificacion)
            Me.columnCodCabys = New Global.System.Data.DataColumn("CodCabys", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodCabys)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId_ArticuloComprados}, True))
            Me.columnId_ArticuloComprados.AutoIncrement = True
            Me.columnId_ArticuloComprados.AllowDBNull = False
            Me.columnId_ArticuloComprados.ReadOnly = True
            Me.columnId_ArticuloComprados.Unique = True
            Me.columnIdCompra.AllowDBNull = False
            Me.columnCodigo.AllowDBNull = False
            Me.columnDescripcion.AllowDBNull = False
            Me.columnBase.AllowDBNull = False
            Me.columnMonto_Flete.AllowDBNull = False
            Me.columnOtrosCargos.AllowDBNull = False
            Me.columnCosto.AllowDBNull = False
            Me.columnCantidad.AllowDBNull = False
            Me.columnGravado.AllowDBNull = False
            Me.columnExento.AllowDBNull = False
            Me.columnDescuento.AllowDBNull = False
            Me.columnDescuento_P.AllowDBNull = False
            Me.columnImpuesto_P.AllowDBNull = False
            Me.columnImpuesto.AllowDBNull = False
            Me.columnTotal.AllowDBNull = False
            Me.columnDevoluciones.AllowDBNull = False
            Me.columnPrecio_A.AllowDBNull = False
            Me.columnPrecio_B.AllowDBNull = False
            Me.columnPrecio_C.AllowDBNull = False
            Me.columnPrecio_D.AllowDBNull = False
            Me.columnCodMonedaVenta.AllowDBNull = False
            Me.columnNuevoCostoBase.AllowDBNull = False
            Me.columnLote.AllowDBNull = False
            Me.columnRegalias.AllowDBNull = False
            Me.columnCodArticulo.AllowDBNull = False
            Me.columnBonificado.AllowDBNull = False
            Me.columnCodigoBonificado.AllowDBNull = False
            Me.columnCantidadBonificado.AllowDBNull = False
            Me.columnCostoBonificado.AllowDBNull = False
            Me.columnSubTotalBonificado.AllowDBNull = False
            Me.columnCodArticuloBonificacion.AllowDBNull = False
            Me.columnCodArticuloBonificacion.MaxLength = 250
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Newarticulos_compradosRow() As articulos_compradosRow
            Return CType(Me.NewRow, articulos_compradosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New articulos_compradosRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(articulos_compradosRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.articulos_compradosRowChangedEvent) Is Nothing) Then
                RaiseEvent articulos_compradosRowChanged(Me, New articulos_compradosRowChangeEvent(CType(e.Row, articulos_compradosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.articulos_compradosRowChangingEvent) Is Nothing) Then
                RaiseEvent articulos_compradosRowChanging(Me, New articulos_compradosRowChangeEvent(CType(e.Row, articulos_compradosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.articulos_compradosRowDeletedEvent) Is Nothing) Then
                RaiseEvent articulos_compradosRowDeleted(Me, New articulos_compradosRowChangeEvent(CType(e.Row, articulos_compradosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.articulos_compradosRowDeletingEvent) Is Nothing) Then
                RaiseEvent articulos_compradosRowDeleting(Me, New articulos_compradosRowChangeEvent(CType(e.Row, articulos_compradosRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Removearticulos_compradosRow(ByVal row As articulos_compradosRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "articulos_compradosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class comprasDataTable
        Inherits Global.System.Data.TypedTableBase(Of comprasRow)

        Private columnFactura As Global.System.Data.DataColumn

        Private columnCodigoProv As Global.System.Data.DataColumn

        Private columnSubTotalGravado As Global.System.Data.DataColumn

        Private columnSubTotalExento As Global.System.Data.DataColumn

        Private columnDescuento As Global.System.Data.DataColumn

        Private columnImpuesto As Global.System.Data.DataColumn

        Private columnTotalFactura As Global.System.Data.DataColumn

        Private columnFecha As Global.System.Data.DataColumn

        Private columnVence As Global.System.Data.DataColumn

        Private columnFechaIngreso As Global.System.Data.DataColumn

        Private columnMotivoGasto As Global.System.Data.DataColumn

        Private columnCompra As Global.System.Data.DataColumn

        Private columnContabilizado As Global.System.Data.DataColumn

        Private columnConsignacion As Global.System.Data.DataColumn

        Private columnAsiento As Global.System.Data.DataColumn

        Private columnContaInve As Global.System.Data.DataColumn

        Private columnAsientoInve As Global.System.Data.DataColumn

        Private columnTipoCompra As Global.System.Data.DataColumn

        Private columnCedulaUsuario As Global.System.Data.DataColumn

        Private columnCod_MonedaCompra As Global.System.Data.DataColumn

        Private columnId_Compra As Global.System.Data.DataColumn

        Private columnFacturaCancelado As Global.System.Data.DataColumn

        Private columnCambioImpuesto As Global.System.Data.DataColumn

        Private columnTaller As Global.System.Data.DataColumn

        Private columnMascotas As Global.System.Data.DataColumn

        Private columnnum_orden As Global.System.Data.DataColumn

        Private columnTipoCambio As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "compras"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FacturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactura
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoProvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoProv
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubTotalGravadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotalGravado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubTotalExentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotalExento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImpuestoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpuesto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalFacturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalFactura
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVence
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaIngresoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaIngreso
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MotivoGastoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotivoGasto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ContabilizadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContabilizado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ConsignacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsignacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AsientoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAsiento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ContaInveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContaInve
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AsientoInveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAsientoInve
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCompra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CedulaUsuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCedulaUsuario
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cod_MonedaCompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCod_MonedaCompra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Id_CompraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Compra
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FacturaCanceladoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFacturaCancelado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CambioImpuestoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCambioImpuesto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TallerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaller
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MascotasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMascotas
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property num_ordenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum_orden
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoCambioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCambio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As comprasRow
            Get
                Return CType(Me.Rows(index), comprasRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event comprasRowChanging As comprasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event comprasRowChanged As comprasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event comprasRowDeleting As comprasRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event comprasRowDeleted As comprasRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddcomprasRow(ByVal row As comprasRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddcomprasRow( _
                    ByVal Factura As Double, _
                    ByVal parentProveedoresRowByProveedorescompras As ProveedoresRow, _
                    ByVal SubTotalGravado As Double, _
                    ByVal SubTotalExento As Double, _
                    ByVal Descuento As Double, _
                    ByVal Impuesto As Double, _
                    ByVal TotalFactura As Double, _
                    ByVal Fecha As Date, _
                    ByVal Vence As Date, _
                    ByVal FechaIngreso As Date, _
                    ByVal MotivoGasto As String, _
                    ByVal Compra As Boolean, _
                    ByVal Contabilizado As Boolean, _
                    ByVal Consignacion As Boolean, _
                    ByVal Asiento As Double, _
                    ByVal ContaInve As Boolean, _
                    ByVal AsientoInve As Double, _
                    ByVal TipoCompra As String, _
                    ByVal parentUsuariosRowByUsuarioscompras As UsuariosRow, _
                    ByVal parentMonedaRowByMonedacompras As MonedaRow, _
                    ByVal FacturaCancelado As Boolean, _
                    ByVal CambioImpuesto As Double, _
                    ByVal Taller As Boolean, _
                    ByVal Mascotas As Boolean, _
                    ByVal num_orden As Double, _
                    ByVal TipoCambio As Double) As comprasRow
            Dim rowcomprasRow As comprasRow = CType(Me.NewRow, comprasRow)
            Dim columnValuesArray() As Object = New Object() {Factura, Nothing, SubTotalGravado, SubTotalExento, Descuento, Impuesto, TotalFactura, Fecha, Vence, FechaIngreso, MotivoGasto, Compra, Contabilizado, Consignacion, Asiento, ContaInve, AsientoInve, TipoCompra, Nothing, Nothing, Nothing, FacturaCancelado, CambioImpuesto, Taller, Mascotas, num_orden, TipoCambio}
            If (Not (parentProveedoresRowByProveedorescompras) Is Nothing) Then
                columnValuesArray(1) = parentProveedoresRowByProveedorescompras(0)
            End If
            If (Not (parentUsuariosRowByUsuarioscompras) Is Nothing) Then
                columnValuesArray(18) = parentUsuariosRowByUsuarioscompras(0)
            End If
            If (Not (parentMonedaRowByMonedacompras) Is Nothing) Then
                columnValuesArray(19) = parentMonedaRowByMonedacompras(0)
            End If
            rowcomprasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcomprasRow)
            Return rowcomprasRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindById_Compra(ByVal Id_Compra As Long) As comprasRow
            Return CType(Me.Rows.Find(New Object() {Id_Compra}), comprasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As comprasDataTable = CType(MyBase.Clone, comprasDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New comprasDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnFactura = MyBase.Columns("Factura")
            Me.columnCodigoProv = MyBase.Columns("CodigoProv")
            Me.columnSubTotalGravado = MyBase.Columns("SubTotalGravado")
            Me.columnSubTotalExento = MyBase.Columns("SubTotalExento")
            Me.columnDescuento = MyBase.Columns("Descuento")
            Me.columnImpuesto = MyBase.Columns("Impuesto")
            Me.columnTotalFactura = MyBase.Columns("TotalFactura")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnVence = MyBase.Columns("Vence")
            Me.columnFechaIngreso = MyBase.Columns("FechaIngreso")
            Me.columnMotivoGasto = MyBase.Columns("MotivoGasto")
            Me.columnCompra = MyBase.Columns("Compra")
            Me.columnContabilizado = MyBase.Columns("Contabilizado")
            Me.columnConsignacion = MyBase.Columns("Consignacion")
            Me.columnAsiento = MyBase.Columns("Asiento")
            Me.columnContaInve = MyBase.Columns("ContaInve")
            Me.columnAsientoInve = MyBase.Columns("AsientoInve")
            Me.columnTipoCompra = MyBase.Columns("TipoCompra")
            Me.columnCedulaUsuario = MyBase.Columns("CedulaUsuario")
            Me.columnCod_MonedaCompra = MyBase.Columns("Cod_MonedaCompra")
            Me.columnId_Compra = MyBase.Columns("Id_Compra")
            Me.columnFacturaCancelado = MyBase.Columns("FacturaCancelado")
            Me.columnCambioImpuesto = MyBase.Columns("CambioImpuesto")
            Me.columnTaller = MyBase.Columns("Taller")
            Me.columnMascotas = MyBase.Columns("Mascotas")
            Me.columnnum_orden = MyBase.Columns("num_orden")
            Me.columnTipoCambio = MyBase.Columns("TipoCambio")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnFactura = New Global.System.Data.DataColumn("Factura", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactura)
            Me.columnCodigoProv = New Global.System.Data.DataColumn("CodigoProv", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoProv)
            Me.columnSubTotalGravado = New Global.System.Data.DataColumn("SubTotalGravado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotalGravado)
            Me.columnSubTotalExento = New Global.System.Data.DataColumn("SubTotalExento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotalExento)
            Me.columnDescuento = New Global.System.Data.DataColumn("Descuento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuento)
            Me.columnImpuesto = New Global.System.Data.DataColumn("Impuesto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpuesto)
            Me.columnTotalFactura = New Global.System.Data.DataColumn("TotalFactura", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalFactura)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnVence = New Global.System.Data.DataColumn("Vence", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVence)
            Me.columnFechaIngreso = New Global.System.Data.DataColumn("FechaIngreso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaIngreso)
            Me.columnMotivoGasto = New Global.System.Data.DataColumn("MotivoGasto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotivoGasto)
            Me.columnCompra = New Global.System.Data.DataColumn("Compra", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompra)
            Me.columnContabilizado = New Global.System.Data.DataColumn("Contabilizado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContabilizado)
            Me.columnConsignacion = New Global.System.Data.DataColumn("Consignacion", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsignacion)
            Me.columnAsiento = New Global.System.Data.DataColumn("Asiento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAsiento)
            Me.columnContaInve = New Global.System.Data.DataColumn("ContaInve", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContaInve)
            Me.columnAsientoInve = New Global.System.Data.DataColumn("AsientoInve", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAsientoInve)
            Me.columnTipoCompra = New Global.System.Data.DataColumn("TipoCompra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCompra)
            Me.columnCedulaUsuario = New Global.System.Data.DataColumn("CedulaUsuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCedulaUsuario)
            Me.columnCod_MonedaCompra = New Global.System.Data.DataColumn("Cod_MonedaCompra", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCod_MonedaCompra)
            Me.columnId_Compra = New Global.System.Data.DataColumn("Id_Compra", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Compra)
            Me.columnFacturaCancelado = New Global.System.Data.DataColumn("FacturaCancelado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFacturaCancelado)
            Me.columnCambioImpuesto = New Global.System.Data.DataColumn("CambioImpuesto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCambioImpuesto)
            Me.columnTaller = New Global.System.Data.DataColumn("Taller", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaller)
            Me.columnMascotas = New Global.System.Data.DataColumn("Mascotas", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMascotas)
            Me.columnnum_orden = New Global.System.Data.DataColumn("num_orden", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum_orden)
            Me.columnTipoCambio = New Global.System.Data.DataColumn("TipoCambio", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCambio)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId_Compra}, True))
            Me.columnFactura.AllowDBNull = False
            Me.columnCodigoProv.AllowDBNull = False
            Me.columnSubTotalGravado.AllowDBNull = False
            Me.columnSubTotalExento.AllowDBNull = False
            Me.columnDescuento.AllowDBNull = False
            Me.columnImpuesto.AllowDBNull = False
            Me.columnTotalFactura.AllowDBNull = False
            Me.columnFecha.AllowDBNull = False
            Me.columnVence.AllowDBNull = False
            Me.columnFechaIngreso.AllowDBNull = False
            Me.columnMotivoGasto.AllowDBNull = False
            Me.columnCompra.AllowDBNull = False
            Me.columnContabilizado.AllowDBNull = False
            Me.columnConsignacion.AllowDBNull = False
            Me.columnAsiento.AllowDBNull = False
            Me.columnContaInve.AllowDBNull = False
            Me.columnAsientoInve.AllowDBNull = False
            Me.columnTipoCompra.AllowDBNull = False
            Me.columnCedulaUsuario.AllowDBNull = False
            Me.columnCod_MonedaCompra.AllowDBNull = False
            Me.columnId_Compra.AutoIncrement = True
            Me.columnId_Compra.AllowDBNull = False
            Me.columnId_Compra.ReadOnly = True
            Me.columnId_Compra.Unique = True
            Me.columnFacturaCancelado.AllowDBNull = False
            Me.columnCambioImpuesto.AllowDBNull = False
            Me.columnTaller.AllowDBNull = False
            Me.columnMascotas.AllowDBNull = False
            Me.columnTipoCambio.DefaultValue = CType(0.0R, Double)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewcomprasRow() As comprasRow
            Return CType(Me.NewRow, comprasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New comprasRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(comprasRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.comprasRowChangedEvent) Is Nothing) Then
                RaiseEvent comprasRowChanged(Me, New comprasRowChangeEvent(CType(e.Row, comprasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.comprasRowChangingEvent) Is Nothing) Then
                RaiseEvent comprasRowChanging(Me, New comprasRowChangeEvent(CType(e.Row, comprasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.comprasRowDeletedEvent) Is Nothing) Then
                RaiseEvent comprasRowDeleted(Me, New comprasRowChangeEvent(CType(e.Row, comprasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.comprasRowDeletingEvent) Is Nothing) Then
                RaiseEvent comprasRowDeleting(Me, New comprasRowChangeEvent(CType(e.Row, comprasRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovecomprasRow(ByVal row As comprasRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSetCompras = New DataSetCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "comprasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class UsuariosRow
        Inherits Global.System.Data.DataRow

        Private tableUsuarios As UsuariosDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUsuarios = CType(Me.Table, UsuariosDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cedula() As String
            Get
                Return CType(Me(Me.tableUsuarios.CedulaColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableUsuarios.CedulaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Nombre() As String
            Get
                Return CType(Me(Me.tableUsuarios.NombreColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableUsuarios.NombreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Clave_Interna() As String
            Get
                Return CType(Me(Me.tableUsuarios.Clave_InternaColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableUsuarios.Clave_InternaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetcomprasRows() As comprasRow()
            If (Me.Table.ChildRelations("Usuarioscompras") Is Nothing) Then
                Return New comprasRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Usuarioscompras")), comprasRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MonedasRow
        Inherits Global.System.Data.DataRow

        Private tableMonedas As MonedasDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMonedas = CType(Me.Table, MonedasDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodMoneda() As Integer
            Get
                Return CType(Me(Me.tableMonedas.CodMonedaColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableMonedas.CodMonedaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MonedaNombre() As String
            Get
                Return CType(Me(Me.tableMonedas.MonedaNombreColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableMonedas.MonedaNombreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorCompra() As Double
            Get
                Return CType(Me(Me.tableMonedas.ValorCompraColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableMonedas.ValorCompraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorVenta() As Double
            Get
                Return CType(Me(Me.tableMonedas.ValorVentaColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableMonedas.ValorVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Getarticulos_compradosRows() As articulos_compradosRow()
            If (Me.Table.ChildRelations("Monedasarticulos_comprados") Is Nothing) Then
                Return New articulos_compradosRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Monedasarticulos_comprados")), articulos_compradosRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ordencompraRow
        Inherits Global.System.Data.DataRow

        Private tableordencompra As ordencompraDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableordencompra = CType(Me.Table, ordencompraDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Orden() As Long
            Get
                Return CType(Me(Me.tableordencompra.OrdenColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableordencompra.OrdenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Proveedor() As Integer
            Get
                Return CType(Me(Me.tableordencompra.ProveedorColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableordencompra.ProveedorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Nombre() As String
            Get
                Return CType(Me(Me.tableordencompra.NombreColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableordencompra.NombreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Fecha() As Date
            Get
                Return CType(Me(Me.tableordencompra.FechaColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableordencompra.FechaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property contado() As Boolean
            Get
                Return CType(Me(Me.tableordencompra.contadoColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableordencompra.contadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property credito() As Boolean
            Get
                Return CType(Me(Me.tableordencompra.creditoColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableordencompra.creditoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property diascredito() As Double
            Get
                Return CType(Me(Me.tableordencompra.diascreditoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableordencompra.diascreditoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plazo() As Integer
            Get
                Return CType(Me(Me.tableordencompra.PlazoColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableordencompra.PlazoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descuento() As Double
            Get
                Return CType(Me(Me.tableordencompra.DescuentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableordencompra.DescuentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto() As Double
            Get
                Return CType(Me(Me.tableordencompra.ImpuestoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableordencompra.ImpuestoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Double
            Get
                Return CType(Me(Me.tableordencompra.TotalColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableordencompra.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Observaciones() As String
            Get
                Return CType(Me(Me.tableordencompra.ObservacionesColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableordencompra.ObservacionesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Usuario() As String
            Get
                Return CType(Me(Me.tableordencompra.UsuarioColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableordencompra.UsuarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreUsuario() As String
            Get
                Return CType(Me(Me.tableordencompra.NombreUsuarioColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableordencompra.NombreUsuarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property entregar() As String
            Get
                Return CType(Me(Me.tableordencompra.entregarColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableordencompra.entregarColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cod_Moneda() As Integer
            Get
                Return CType(Me(Me.tableordencompra.Cod_MonedaColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableordencompra.Cod_MonedaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubTotalGravado() As Double
            Get
                Return CType(Me(Me.tableordencompra.SubTotalGravadoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableordencompra.SubTotalGravadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubTotalExento() As Double
            Get
                Return CType(Me(Me.tableordencompra.SubTotalExentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableordencompra.SubTotalExentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubTotal() As Double
            Get
                Return CType(Me(Me.tableordencompra.SubTotalColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableordencompra.SubTotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Anulado() As Boolean
            Get
                Return CType(Me(Me.tableordencompra.AnuladoColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableordencompra.AnuladoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Getdetalle_ordencompraRows() As detalle_ordencompraRow()
            If (Me.Table.ChildRelations("ordencompradetalle_ordencompra") Is Nothing) Then
                Return New detalle_ordencompraRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ordencompradetalle_ordencompra")), detalle_ordencompraRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class detalle_ordencompraRow
        Inherits Global.System.Data.DataRow

        Private tabledetalle_ordencompra As detalle_ordencompraDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledetalle_ordencompra = CType(Me.Table, detalle_ordencompraDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Id() As Long
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.IdColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tabledetalle_ordencompra.IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Orden() As Long
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.OrdenColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tabledetalle_ordencompra.OrdenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Codigo() As Long
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.CodigoColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tabledetalle_ordencompra.CodigoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descripcion() As String
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.DescripcionColumn), String)
            End Get
            Set(value As String)
                Me(Me.tabledetalle_ordencompra.DescripcionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CostoUnitario() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.CostoUnitarioColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.CostoUnitarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cantidad() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.CantidadColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.CantidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalCompra() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.TotalCompraColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.TotalCompraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Porc_Descuento() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.Porc_DescuentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.Porc_DescuentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descuento() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.DescuentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.DescuentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Porc_Impuesto() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.Porc_ImpuestoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.Porc_ImpuestoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property impuesto() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.impuestoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.impuestoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OtrosCargos() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.OtrosCargosColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.OtrosCargosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Monto_Flete() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.Monto_FleteColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.Monto_FleteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Costo() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.CostoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.CostoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Gravado() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.GravadoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.GravadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Exento() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.ExentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.ExentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vendidos() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.VendidosColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.VendidosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Exist_Actual() As Double
            Get
                Return CType(Me(Me.tabledetalle_ordencompra.Exist_ActualColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tabledetalle_ordencompra.Exist_ActualColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ordencompraRow() As ordencompraRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ordencompradetalle_ordencompra")), ordencompraRow)
            End Get
            Set(value As ordencompraRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("ordencompradetalle_ordencompra"))
            End Set
        End Property
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MonedaRow
        Inherits Global.System.Data.DataRow

        Private tableMoneda As MonedaDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMoneda = CType(Me.Table, MonedaDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodMoneda() As Integer
            Get
                Return CType(Me(Me.tableMoneda.CodMonedaColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableMoneda.CodMonedaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MonedaNombre() As String
            Get
                Return CType(Me(Me.tableMoneda.MonedaNombreColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableMoneda.MonedaNombreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorCompra() As Double
            Get
                Return CType(Me(Me.tableMoneda.ValorCompraColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableMoneda.ValorCompraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValorVenta() As Double
            Get
                Return CType(Me(Me.tableMoneda.ValorVentaColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableMoneda.ValorVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Simbolo() As String
            Get
                Return CType(Me(Me.tableMoneda.SimboloColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableMoneda.SimboloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetcomprasRows() As comprasRow()
            If (Me.Table.ChildRelations("Monedacompras") Is Nothing) Then
                Return New comprasRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Monedacompras")), comprasRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ProveedoresRow
        Inherits Global.System.Data.DataRow

        Private tableProveedores As ProveedoresDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableProveedores = CType(Me.Table, ProveedoresDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoProv() As Integer
            Get
                Return CType(Me(Me.tableProveedores.CodigoProvColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableProveedores.CodigoProvColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Nombre() As String
            Get
                Return CType(Me(Me.tableProveedores.NombreColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableProveedores.NombreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Utilidad_Fija() As Boolean
            Get
                Return CType(Me(Me.tableProveedores.Utilidad_FijaColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableProveedores.Utilidad_FijaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Utilidad_Inventario() As Double
            Get
                Return CType(Me(Me.tableProveedores.Utilidad_InventarioColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableProveedores.Utilidad_InventarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Plazo() As Integer
            Get
                Return CType(Me(Me.tableProveedores.PlazoColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableProveedores.PlazoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetcomprasRows() As comprasRow()
            If (Me.Table.ChildRelations("Proveedorescompras") Is Nothing) Then
                Return New comprasRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Proveedorescompras")), comprasRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LotesRow
        Inherits Global.System.Data.DataRow

        Private tableLotes As LotesDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLotes = CType(Me.Table, LotesDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Id() As Long
            Get
                Return CType(Me(Me.tableLotes.IdColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableLotes.IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Numero() As String
            Get
                Return CType(Me(Me.tableLotes.NumeroColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableLotes.NumeroColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vencimiento() As Date
            Get
                Return CType(Me(Me.tableLotes.VencimientoColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableLotes.VencimientoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cant_Inicial() As Double
            Get
                Return CType(Me(Me.tableLotes.Cant_InicialColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableLotes.Cant_InicialColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cant_Actual() As Double
            Get
                Return CType(Me(Me.tableLotes.Cant_ActualColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tableLotes.Cant_ActualColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Fecha_Entrada() As Date
            Get
                Return CType(Me(Me.tableLotes.Fecha_EntradaColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableLotes.Fecha_EntradaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cod_Articulo() As Long
            Get
                Return CType(Me(Me.tableLotes.Cod_ArticuloColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableLotes.Cod_ArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Documento() As Long
            Get
                Return CType(Me(Me.tableLotes.DocumentoColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tableLotes.DocumentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Tipo() As String
            Get
                Return CType(Me(Me.tableLotes.TipoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableLotes.TipoColumn) = value
            End Set
        End Property
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class articulos_compradosRow
        Inherits Global.System.Data.DataRow

        Private tablearticulos_comprados As articulos_compradosDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablearticulos_comprados = CType(Me.Table, articulos_compradosDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Id_ArticuloComprados() As Long
            Get
                Return CType(Me(Me.tablearticulos_comprados.Id_ArticuloCompradosColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tablearticulos_comprados.Id_ArticuloCompradosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IdCompra() As Long
            Get
                Return CType(Me(Me.tablearticulos_comprados.IdCompraColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tablearticulos_comprados.IdCompraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Codigo() As Long
            Get
                Return CType(Me(Me.tablearticulos_comprados.CodigoColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tablearticulos_comprados.CodigoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descripcion() As String
            Get
                Return CType(Me(Me.tablearticulos_comprados.DescripcionColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablearticulos_comprados.DescripcionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Base() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.BaseColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.BaseColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Monto_Flete() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.Monto_FleteColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.Monto_FleteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OtrosCargos() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.OtrosCargosColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.OtrosCargosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Costo() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.CostoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.CostoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cantidad() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.CantidadColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.CantidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Gravado() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.GravadoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.GravadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Exento() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.ExentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.ExentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descuento() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.DescuentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.DescuentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descuento_P() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.Descuento_PColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.Descuento_PColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto_P() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.Impuesto_PColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.Impuesto_PColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.ImpuestoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.ImpuestoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Total() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.TotalColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.TotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Devoluciones() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.DevolucionesColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.DevolucionesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio_A() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.Precio_AColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.Precio_AColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio_B() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.Precio_BColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.Precio_BColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio_C() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.Precio_CColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.Precio_CColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio_D() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.Precio_DColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.Precio_DColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodMonedaVenta() As Integer
            Get
                Return CType(Me(Me.tablearticulos_comprados.CodMonedaVentaColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablearticulos_comprados.CodMonedaVentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NuevoCostoBase() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.NuevoCostoBaseColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.NuevoCostoBaseColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Lote() As String
            Get
                Return CType(Me(Me.tablearticulos_comprados.LoteColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablearticulos_comprados.LoteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Regalias() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.RegaliasColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.RegaliasColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodArticulo() As String
            Get
                Return CType(Me(Me.tablearticulos_comprados.CodArticuloColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablearticulos_comprados.CodArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Bonificado() As Boolean
            Get
                Return CType(Me(Me.tablearticulos_comprados.BonificadoColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tablearticulos_comprados.BonificadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoBonificado() As Long
            Get
                Return CType(Me(Me.tablearticulos_comprados.CodigoBonificadoColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tablearticulos_comprados.CodigoBonificadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CantidadBonificado() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.CantidadBonificadoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.CantidadBonificadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CostoBonificado() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.CostoBonificadoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.CostoBonificadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubTotalBonificado() As Double
            Get
                Return CType(Me(Me.tablearticulos_comprados.SubTotalBonificadoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablearticulos_comprados.SubTotalBonificadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodArticuloBonificacion() As String
            Get
                Return CType(Me(Me.tablearticulos_comprados.CodArticuloBonificacionColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablearticulos_comprados.CodArticuloBonificacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodCabys() As String
            Get
                Try
                    Return CType(Me(Me.tablearticulos_comprados.CodCabysColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodCabys' in table 'articulos_comprados' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablearticulos_comprados.CodCabysColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MonedasRow() As MonedasRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Monedasarticulos_comprados")), MonedasRow)
            End Get
            Set(value As MonedasRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("Monedasarticulos_comprados"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property comprasRow() As comprasRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("comprasarticulos_comprados")), comprasRow)
            End Get
            Set(value As comprasRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("comprasarticulos_comprados"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodCabysNull() As Boolean
            Return Me.IsNull(Me.tablearticulos_comprados.CodCabysColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodCabysNull()
            Me(Me.tablearticulos_comprados.CodCabysColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class comprasRow
        Inherits Global.System.Data.DataRow

        Private tablecompras As comprasDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecompras = CType(Me.Table, comprasDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Factura() As Double
            Get
                Return CType(Me(Me.tablecompras.FacturaColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.FacturaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoProv() As Integer
            Get
                Return CType(Me(Me.tablecompras.CodigoProvColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablecompras.CodigoProvColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubTotalGravado() As Double
            Get
                Return CType(Me(Me.tablecompras.SubTotalGravadoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.SubTotalGravadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubTotalExento() As Double
            Get
                Return CType(Me(Me.tablecompras.SubTotalExentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.SubTotalExentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descuento() As Double
            Get
                Return CType(Me(Me.tablecompras.DescuentoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.DescuentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Impuesto() As Double
            Get
                Return CType(Me(Me.tablecompras.ImpuestoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.ImpuestoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalFactura() As Double
            Get
                Return CType(Me(Me.tablecompras.TotalFacturaColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.TotalFacturaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Fecha() As Date
            Get
                Return CType(Me(Me.tablecompras.FechaColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tablecompras.FechaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Vence() As Date
            Get
                Return CType(Me(Me.tablecompras.VenceColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tablecompras.VenceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaIngreso() As Date
            Get
                Return CType(Me(Me.tablecompras.FechaIngresoColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tablecompras.FechaIngresoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MotivoGasto() As String
            Get
                Return CType(Me(Me.tablecompras.MotivoGastoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablecompras.MotivoGastoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Compra() As Boolean
            Get
                Return CType(Me(Me.tablecompras.CompraColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tablecompras.CompraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Contabilizado() As Boolean
            Get
                Return CType(Me(Me.tablecompras.ContabilizadoColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tablecompras.ContabilizadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Consignacion() As Boolean
            Get
                Return CType(Me(Me.tablecompras.ConsignacionColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tablecompras.ConsignacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Asiento() As Double
            Get
                Return CType(Me(Me.tablecompras.AsientoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.AsientoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ContaInve() As Boolean
            Get
                Return CType(Me(Me.tablecompras.ContaInveColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tablecompras.ContaInveColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AsientoInve() As Double
            Get
                Return CType(Me(Me.tablecompras.AsientoInveColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.AsientoInveColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoCompra() As String
            Get
                Return CType(Me(Me.tablecompras.TipoCompraColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablecompras.TipoCompraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CedulaUsuario() As String
            Get
                Return CType(Me(Me.tablecompras.CedulaUsuarioColumn), String)
            End Get
            Set(value As String)
                Me(Me.tablecompras.CedulaUsuarioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cod_MonedaCompra() As Integer
            Get
                Return CType(Me(Me.tablecompras.Cod_MonedaCompraColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablecompras.Cod_MonedaCompraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Id_Compra() As Long
            Get
                Return CType(Me(Me.tablecompras.Id_CompraColumn), Long)
            End Get
            Set(value As Long)
                Me(Me.tablecompras.Id_CompraColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FacturaCancelado() As Boolean
            Get
                Return CType(Me(Me.tablecompras.FacturaCanceladoColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tablecompras.FacturaCanceladoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CambioImpuesto() As Double
            Get
                Return CType(Me(Me.tablecompras.CambioImpuestoColumn), Double)
            End Get
            Set(value As Double)
                Me(Me.tablecompras.CambioImpuestoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Taller() As Boolean
            Get
                Return CType(Me(Me.tablecompras.TallerColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tablecompras.TallerColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Mascotas() As Boolean
            Get
                Return CType(Me(Me.tablecompras.MascotasColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tablecompras.MascotasColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property num_orden() As Double
            Get
                Try
                    Return CType(Me(Me.tablecompras.num_ordenColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'num_orden' in table 'compras' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tablecompras.num_ordenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoCambio() As Double
            Get
                Try
                    Return CType(Me(Me.tablecompras.TipoCambioColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoCambio' in table 'compras' is DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tablecompras.TipoCambioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProveedoresRow() As ProveedoresRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Proveedorescompras")), ProveedoresRow)
            End Get
            Set(value As ProveedoresRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("Proveedorescompras"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MonedaRow() As MonedaRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Monedacompras")), MonedaRow)
            End Get
            Set(value As MonedaRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("Monedacompras"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UsuariosRow() As UsuariosRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Usuarioscompras")), UsuariosRow)
            End Get
            Set(value As UsuariosRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("Usuarioscompras"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isnum_ordenNull() As Boolean
            Return Me.IsNull(Me.tablecompras.num_ordenColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setnum_ordenNull()
            Me(Me.tablecompras.num_ordenColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoCambioNull() As Boolean
            Return Me.IsNull(Me.tablecompras.TipoCambioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoCambioNull()
            Me(Me.tablecompras.TipoCambioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Getarticulos_compradosRows() As articulos_compradosRow()
            If (Me.Table.ChildRelations("comprasarticulos_comprados") Is Nothing) Then
                Return New articulos_compradosRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("comprasarticulos_comprados")), articulos_compradosRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class UsuariosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UsuariosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As UsuariosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As UsuariosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MonedasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MonedasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MonedasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MonedasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ordencompraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ordencompraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ordencompraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ordencompraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class detalle_ordencompraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As detalle_ordencompraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As detalle_ordencompraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As detalle_ordencompraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MonedaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MonedaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MonedaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MonedaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ProveedoresRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ProveedoresRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ProveedoresRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ProveedoresRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LotesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LotesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LotesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LotesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class articulos_compradosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As articulos_compradosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As articulos_compradosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As articulos_compradosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class comprasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As comprasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As comprasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As comprasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
